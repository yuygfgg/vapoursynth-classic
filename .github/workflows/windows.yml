name: Windows

on: [push, pull_request, workflow_dispatch]

jobs:
  build-msvc:
    runs-on: windows-2019

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        arch: [x64]
        platform: [x64]
        bits: [64]
        test: [true]

    steps:
    - uses: actions/checkout@v4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Clone Dependencies
      shell: bash
      run: |
        git clone https://github.com/vapoursynth/vsrepo --depth 1
        git clone https://github.com/AmusementClub/zimg --branch v3.0
        # revert the upgrade to msvc 2022 commit as we're still using 2019.
        pushd zimg
        # revert "resize: fix off by one error in AVX-512 vertical fp resizer"
        git checkout e5b0de6
        git show 021ac40e5f350b19183bed25d498f437516da454 | patch -p1 -R
        popd
        git clone https://github.com/AviSynth/AviSynthPlus.git --depth 1
        # just before the update to v143 toolset (MSVC 2022)
        git clone https://github.com/sekrit-twc/libp2p
        pushd libp2p
        git checkout 10f88fcc811db84a2f25b4b87729d58a569b2486
        popd
        git clone https://github.com/microsoft/mimalloc --branch v2.0.1 --depth 1

    - name: Build mimalloc
      shell: cmd
      run: |
        cd mimalloc
        msbuild ide/vs2019/mimalloc.sln /p:Configuration=Release /p:Platform=${{ matrix.arch }}
        out\msvc-${{matrix.platform}}\Release\mimalloc-override-test.exe
        cd ..

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}

    - name: Install cython and Save Path
      shell: bash
      run: |
        py -${{ matrix.python-version }}-${{ matrix.bits }} -m pip install --upgrade pip
        py -${{ matrix.python-version }}-${{ matrix.bits }} -m pip install cython setuptools wheel
        echo "PYTHON_DIR=$pythonLocation" >> $GITHUB_ENV

    - name: Patch Python Include Paths
      shell: powershell
      run: |
        $py_include_path = (Join-Path (Split-Path -Path (Get-Command python.exe).Path) "include")
        $py_binary_path = (Join-Path (Split-Path -Path (Get-Command python.exe).Path) "libs")
        $project_file = "msvc_project\VSScript\VSScript.vcxproj"
        (Get-Content -Path $project_file -Raw) -replace "C:\\Program Files %28x86%29\\Python[0-9.-]*\\libs",$py_binary_path | Set-Content $project_file
        (Get-Content -Path $project_file -Raw) -replace "C:\\Program Files %28x86%29\\Python[0-9.-]*\\include",$py_include_path | Set-Content $project_file
        (Get-Content -Path $project_file -Raw) -replace "C:\\Program Files\\Python[0-9.-]*\\libs",$py_binary_path | Set-Content $project_file
        (Get-Content -Path $project_file -Raw) -replace "C:\\Program Files\\Python[0-9.-]*\\include",$py_include_path | Set-Content $project_file

    - name: Compile VS
      run: |
        msbuild msvc_project/VapourSynth.sln /t:Build /p:Configuration=Release /p:Platform=${{ matrix.platform }}

    - name: Build Python plugin
      run: |
        py -${{ matrix.python-version }}-${{ matrix.bits }} -m pip install . --no-deps -v

    - name: Build installer
      shell: powershell
      run: |
        pushd installer
        $env:SKIP_COMPRESS="no"
        $env:SKIP_WAIT="yes"
        & ".\make portable.bat"

        if ("${{ matrix.arch }}" -eq "x64") {
          pushd "buildp${{ matrix.bits }}"
        } else {
          pushd "buildp32"
        }
        py -${{ matrix.python-version }}-${{ matrix.bits }} -m pip install . --no-deps -v
        popd
        popd

    - name: Build release
      shell: bash
      run: |
        bits=${{ matrix.bits }}
        arch=${{ matrix.arch }}
        cp "$PYTHON_DIR"/Lib/site-packages/vapoursynth*.pyd installer/buildp$bits
        7z a -t7z -mx=3 ../build.7z .
        mv ../*.7z .
        mv installer/buildp$bits upload

    - name: Upload build artifact
      if: ${{ matrix.python-version == '3.12' }}
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.arch }}-py${{ matrix.python-version }}
        if-no-files-found: error
        path: build.7z

    - name: Run test
      if: ${{ matrix.test }}
      run: py -${{ matrix.python-version }}-${{ matrix.bits }} -m unittest discover -s test -p "*test.py"

    - name: Install sphinx
      run: |
        pip install -r python-requirements.txt

    - name: Build Doc
      shell: cmd
      run: |
        set SPHINXBUILD=sphinx-build
        call docs_build.bat

    - name: Build release
      shell: bash
      run: |
        set -ex
        mv doc/_build/html upload/doc

    - name: Setup VC commands
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.platform }}

    - name: Copy VC Runtime Libraries
      shell: bash
      run: |
        cd upload
        while true; do
          changed=false
          for dll in *.[dD][lL][lL] *.[Ee][Xx][Ee] *.[Pp][Yy][Dd]; do
             for dep in $(dumpbin -dependents "$dll" | grep -o -i '\(vc\|msvc\)[a-z0-9_-]*\.dll'); do
                echo "finding $dep for $dll"
                if ! test -f ./"$dep"; then
                  changed=true
                  src="$(where "$dep" | grep -i 'MSVC' | head -1)"
                  echo "copying $src for $dep"
                  test -f "$src" || exit 1
                  cp -f "$src" .
                fi
             done
          done
          $changed || break
        done

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.arch }}-py${{ matrix.python-version }}
        if-no-files-found: error
        path: |
          upload/
  
  organize-release:
    runs-on: ubuntu-latest
    needs: build-msvc
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: release
        
    - name: Remove duplicate files by filename
      shell: bash
      run: |
        pushd release
        rm -rf build-x64-py3.12
        ls -1 | awk '{
          if (seen[$0]++ == 0) {
            print $0
          } else {
            rm $0
          }
        }'
        popd
        
    - name: Upload final release artifact
      uses: actions/upload-artifact@v4
      with:
       name: release
       path: release